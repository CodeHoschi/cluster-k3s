---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: step-certificates
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      chart: step-certificates
      version: 1.18.2
      sourceRef:
        kind: HelmRepository
        name: smallstep-charts
        namespace: flux-system
      interval: 5m
  # dependsOn:
  #   - name: cert-manager
  #     namespace: cert-manager
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    ca:
      db:
        existingClaim: step-certificates-pvc
    service:
      targetPort: 9000
    inject:
      enabled: true
      # Config contains the configuration files ca.json and defaults.json
      config:
        files:
          ca.json:
            root: /home/step/certs/root_ca.crt
            federateRoots: []
            crt: /home/step/certs/intermediate_ca.crt
            key: /home/step/secrets/intermediate_ca_key
            address: :9000
            dnsNames:
              - step-certificates.networking.svc
              - 'ca.${SECRET_DOMAIN}'
            logger:
              format: json
            db:
              type: badgerv2
              dataSource: /home/step/db
            authority:
              provisioners:
                - { 'type': 'ACME', 'name': 'acme' }
            tls:
              cipherSuites:
                - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
                - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
              minVersion: 1.2
              maxVersion: 1.3
              renegotiation: false
          defaults.json:
            ca-url: https://step-certificates.networking.svc
            ca-config: /home/step/config/ca.json
            fingerprint: 65beba33f23c772f0c5ad25f63338a7f1f9551161573304abd87ced5e7b692af
            root: /home/step/certs/root_ca.crt
      # Certificates contains the root and intermediate certificate and
      # optionally the SSH host and user public keys
      certificates:
        # intermediate_ca contains the text of the intermediate CA Certificate
        intermediate_ca: '${STEP_INTERMEDIATE_CA}'
        # root_ca contains the text of the root CA Certificate
        root_ca: '${STEP_ROOT_CA}'
      # Secrets contains the root and intermediate keys and optionally the SSH
      # private keys
      secrets:
        # ca_password contains the password used to encrypt x509.intermediate_ca_key, ssh.host_ca_key and ssh.user_ca_key
        # This value must be base64 encoded.
        ca_password: '${STEP_CA_PASSWORD}'
        provisioner_password: '${STEP_PROVISIONER_PASSWORD}'
        x509:
          # intermediate_ca_key contains the contents of your encrypted intermediate CA key
          intermediate_ca_key: '${STEP_INTERMEDIATE_CA_KEY}'
          # root_ca_key contains the contents of your encrypted root CA key
          # Note that this value can be omitted without impacting the functionality of step-certificates
          # If supplied, this should be encrypted using a unique password that is not used for encrypting
          # the intermediate_ca_key, ssh.host_ca_key or ssh.user_ca_key.
          root_ca_key: '${STEP_ROOT_CA_KEY}'
    # resources:
    #   requests:
    #     memory: 100Mi
    #     cpu: 500m
    #   limits:
    #     memory: 500Mi
